import { IAnimationContext } from './animation';
import { ARowRenderer, IRowRendererOptions } from './ARowRenderer';
import { EScrollResult, IMixinClass } from './mixin';
import { GridStyleManager, IColumn } from './style';
import { ICellAdapterRenderContext } from './table/internal/ACellAdapter';
export declare type ICellRenderContext<T extends IColumn> = ICellAdapterRenderContext<T>;
export declare abstract class ACellRenderer<T extends IColumn> extends ARowRenderer {
    protected readonly root: HTMLElement;
    protected readonly style: GridStyleManager;
    private readonly cell;
    constructor(root: HTMLElement, htmlId: string, options?: Partial<IRowRendererOptions>);
    protected readonly header: HTMLElement;
    protected readonly headerScroller: HTMLElement;
    protected readonly visibleColumns: {
        frozen: number[];
        first: number;
        forcedFirst: number;
        last: number;
        forcedLast: number;
    };
    protected readonly visibleFirstColumnPos: number;
    protected addColumnMixin(mixinClass: IMixinClass, options?: any): void;
    protected init(): void;
    destroy(): void;
    protected onScrolledHorizontally(scrollLeft: number, clientWidth: number, isGoingRight: boolean): EScrollResult;
    protected abstract readonly context: ICellRenderContext<T>;
    protected abstract createHeader(document: Document, column: T): HTMLElement;
    protected abstract updateHeader(node: HTMLElement, column: T): HTMLElement | void;
    protected abstract createCell(document: Document, index: number, column: T): HTMLElement;
    protected abstract updateCell(node: HTMLElement, index: number, column: T): HTMLElement | void;
    protected updateHeaders(): void;
    protected updateColumnWidths(): void;
    protected updateSizer(firstRowPos: number): void;
    protected updateShifts(top: number, left: number): void;
    protected recreate(ctx?: IAnimationContext): void;
    protected clearPool(): void;
    protected createRow(node: HTMLElement, rowIndex: number): void;
    protected updateRow(node: HTMLElement, rowIndex: number): void;
}
export default ACellRenderer;
