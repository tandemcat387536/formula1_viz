import { default as ActionColumn } from '../model/ActionColumn';
import { ERenderMode } from './interfaces';
import { forEachChild, noop, noRenderer } from './utils';
var ActionRenderer = (function () {
    function ActionRenderer() {
        this.title = 'Default';
    }
    ActionRenderer.prototype.canRender = function (col, mode) {
        return col instanceof ActionColumn && mode !== ERenderMode.SUMMARY;
    };
    ActionRenderer.prototype.create = function (col) {
        var actions = col.actions;
        return {
            template: "<div class='actions lu-hover-only'>" + actions.map(function (a) { return "<span title='" + a.name + "' class='" + (a.className || '') + "'>" + (a.icon || '') + "</span>"; }).join('') + "</div>",
            update: function (n, d) {
                forEachChild(n, function (ni, i) {
                    ni.onclick = function (event) {
                        event.preventDefault();
                        event.stopPropagation();
                        actions[i].action(d);
                    };
                });
            },
            render: noop
        };
    };
    ActionRenderer.prototype.createGroup = function (col) {
        var actions = col.groupActions;
        return {
            template: "<div class='actions lu-hover-only'>" + actions.map(function (a) { return "<span title='" + a.name + "' class='" + (a.className || '') + "'>" + (a.icon || '') + "</span>"; }).join('') + "</div>",
            update: function (n, group, rows) {
                forEachChild(n, function (ni, i) {
                    ni.onclick = function (event) {
                        event.preventDefault();
                        event.stopPropagation();
                        actions[i].action(group, rows);
                    };
                });
            }
        };
    };
    ActionRenderer.prototype.createSummary = function () {
        return noRenderer;
    };
    return ActionRenderer;
}());
export default ActionRenderer;
//# sourceMappingURL=ActionRenderer.js.map