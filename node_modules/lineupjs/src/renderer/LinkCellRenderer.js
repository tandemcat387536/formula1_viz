import { ERenderMode } from './interfaces';
import { renderMissingDOM } from './missing';
import { noop, noRenderer, setText } from './utils';
import LinkColumn from '../model/LinkColumn';
var LinkCellRenderer = (function () {
    function LinkCellRenderer() {
        this.title = 'Link';
    }
    LinkCellRenderer.prototype.canRender = function (col, mode) {
        return col instanceof LinkColumn && mode !== ERenderMode.SUMMARY;
    };
    LinkCellRenderer.prototype.create = function (col) {
        var align = col.alignment || 'left';
        return {
            template: "<a" + (align !== 'left' ? " class=\"lu-" + align + "\"" : '') + " target=\"_blank\" href=\"\"></a>",
            update: function (n, d) {
                if (renderMissingDOM(n, col, d)) {
                    return;
                }
                var v = col.getLink(d);
                n.href = v ? v.href : '';
                if (col.escape) {
                    setText(n, v ? v.alt : '');
                }
                else {
                    n.innerHTML = v ? v.alt : '';
                }
            },
            render: noop
        };
    };
    LinkCellRenderer.exampleText = function (col, rows) {
        var numExampleRows = 5;
        var examples = [];
        for (var _i = 0, rows_1 = rows; _i < rows_1.length; _i++) {
            var row = rows_1[_i];
            if (col.isMissing(row)) {
                continue;
            }
            var v = col.getLink(row);
            examples.push("<a target=\"_blank\" href=\"" + (v ? v.href : '') + "\">" + (v ? v.alt : '') + "</a>");
            if (examples.length >= numExampleRows) {
                break;
            }
        }
        return "" + examples.join(', ') + (examples.length < rows.length ? ', &hellip;' : '');
    };
    LinkCellRenderer.prototype.createGroup = function (col) {
        return {
            template: "<div> </div>",
            update: function (n, _group, rows) {
                n.innerHTML = LinkCellRenderer.exampleText(col, rows);
            }
        };
    };
    LinkCellRenderer.prototype.createSummary = function () {
        return noRenderer;
    };
    return LinkCellRenderer;
}());
export default LinkCellRenderer;
//# sourceMappingURL=LinkCellRenderer.js.map