import { renderMissingDOM } from './missing';
import { noop, noRenderer, setText, exampleText } from './utils';
import DateColumn, { choose } from '../model/DateColumn';
var DateCellRenderer = (function () {
    function DateCellRenderer() {
        this.title = 'Date';
        this.groupTitle = 'Date';
        this.summaryTitle = 'Date';
    }
    DateCellRenderer.prototype.canRender = function (col) {
        return col instanceof DateColumn;
    };
    DateCellRenderer.prototype.create = function (col) {
        return {
            template: "<div> </div>",
            update: function (n, d) {
                renderMissingDOM(n, col, d);
                setText(n, col.getLabel(d));
            },
            render: noop
        };
    };
    DateCellRenderer.prototype.createGroup = function (col) {
        var isGrouped = col.isGroupedBy() >= 0;
        var grouper = col.getDateGrouper();
        return {
            template: "<div> </div>",
            update: function (n, _group, rows) {
                if (isGrouped) {
                    var chosen = choose(rows, grouper, col);
                    setText(n, chosen.name);
                    return;
                }
                setText(n, exampleText(col, rows));
            }
        };
    };
    DateCellRenderer.prototype.createSummary = function () {
        return noRenderer;
    };
    return DateCellRenderer;
}());
export default DateCellRenderer;
//# sourceMappingURL=DateCellRenderer.js.map