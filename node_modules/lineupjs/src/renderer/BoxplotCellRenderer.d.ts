import { IBoxPlotData, ICategoricalStatistics, IStatistics, IAdvancedBoxPlotData } from '../internal';
import { IDataRow, IGroup } from '../model';
import Column from '../model/Column';
import { IBoxPlotColumn, INumberColumn } from '../model/INumberColumn';
import { default as IRenderContext, ERenderMode, ICellRendererFactory, IImposer } from './interfaces';
export declare function computeLabel(v: IBoxPlotData | IAdvancedBoxPlotData): string;
export default class BoxplotCellRenderer implements ICellRendererFactory {
    readonly title: string;
    canRender(col: Column, mode: ERenderMode): boolean;
    create(col: IBoxPlotColumn, context: IRenderContext, _hist: IStatistics | ICategoricalStatistics | null, imposer?: IImposer): {
        template: string;
        update: (n: HTMLElement, d: IDataRow) => void;
        render: (ctx: CanvasRenderingContext2D, d: IDataRow) => void;
    };
    private static createAggregatedBoxPlot;
    createGroup(col: INumberColumn, _context: IRenderContext, _hist: IStatistics | ICategoricalStatistics | null, imposer?: IImposer): {
        template: string;
        update: (n: HTMLElement, _group: IGroup, rows: IDataRow[]) => void;
    };
    createSummary(col: INumberColumn, _comtext: IRenderContext, _interactive: boolean, imposer?: IImposer): {
        template: string;
        update: (n: HTMLElement, hist: IStatistics | null) => void;
    };
}
