import { __extends } from "tslib";
import AnnotateColumn from '../model/AnnotateColumn';
import StringCellRenderer from './StringCellRenderer';
import { noop } from './utils';
var AnnotationRenderer = (function (_super) {
    __extends(AnnotationRenderer, _super);
    function AnnotationRenderer() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.title = 'Default';
        return _this;
    }
    AnnotationRenderer.prototype.canRender = function (col) {
        return _super.prototype.canRender.call(this, col) && col instanceof AnnotateColumn;
    };
    AnnotationRenderer.prototype.create = function (col) {
        return {
            template: "<div class='annotations text'>\n        <input class='lu-hover-only'>\n        <span class='text lu-not-hover'></span>\n       </div>",
            update: function (n, d) {
                var input = n.firstElementChild;
                input.onchange = function () {
                    col.setValue(d, input.value);
                };
                input.onclick = function (event) {
                    event.stopPropagation();
                };
                n.lastElementChild.textContent = input.value = col.getLabel(d);
            },
            render: noop
        };
    };
    return AnnotationRenderer;
}(StringCellRenderer));
export default AnnotationRenderer;
//# sourceMappingURL=AnnotationRenderer.js.map