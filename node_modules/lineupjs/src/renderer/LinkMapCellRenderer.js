import { ERenderMode } from './interfaces';
import { renderMissingDOM } from './missing';
import { groupByKey } from './TableCellRenderer';
import { noop, noRenderer } from './utils';
import LinkMapColumn from '../model/LinkMapColumn';
var LinkMapCellRenderer = (function () {
    function LinkMapCellRenderer() {
        this.title = 'Table with Links';
    }
    LinkMapCellRenderer.prototype.canRender = function (col, mode) {
        return col instanceof LinkMapColumn && mode !== ERenderMode.SUMMARY;
    };
    LinkMapCellRenderer.prototype.create = function (col) {
        var align = col.alignment || 'left';
        return {
            template: "<div></div>",
            update: function (node, d) {
                if (renderMissingDOM(node, col, d)) {
                    return;
                }
                node.innerHTML = col.getLinkMap(d).map(function (_a) {
                    var key = _a.key, value = _a.value;
                    return "<div>" + key + "</div><div" + (align !== 'left' ? " class=\"lu-" + align + "\"" : '') + "><a href=\"" + value.href + "\" target=\"_blank\">" + value.alt + "</a></div>";
                }).join('');
            },
            render: noop
        };
    };
    LinkMapCellRenderer.example = function (arr) {
        var numExampleRows = 5;
        var examples = [];
        for (var _i = 0, arr_1 = arr; _i < arr_1.length; _i++) {
            var row = arr_1[_i];
            examples.push("<a target=\"_blank\" href=\"" + row.value.href + "\">" + row.value.alt + "</a>");
            if (examples.length >= numExampleRows) {
                break;
            }
        }
        return "" + examples.join(', ') + (examples.length < arr.length) + " ? ', &hellip;': ''}";
    };
    LinkMapCellRenderer.prototype.createGroup = function (col) {
        var align = col.alignment || 'left';
        return {
            template: "<div></div>",
            update: function (node, _group, rows) {
                var vs = rows.filter(function (d) { return !col.isMissing(d); }).map(function (d) { return col.getLinkMap(d); });
                var entries = groupByKey(vs);
                node.innerHTML = entries.map(function (_a) {
                    var key = _a.key, values = _a.values;
                    return "<div>" + key + "</div><div" + (align !== 'left' ? " class=\"lu-" + align + "\"" : '') + ">" + LinkMapCellRenderer.example(values) + "</div>";
                }).join('');
            }
        };
    };
    LinkMapCellRenderer.prototype.createSummary = function () {
        return noRenderer;
    };
    return LinkMapCellRenderer;
}());
export default LinkMapCellRenderer;
//# sourceMappingURL=LinkMapCellRenderer.js.map