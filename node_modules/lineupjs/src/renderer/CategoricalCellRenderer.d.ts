import { ICategoricalStatistics } from '../internal/math';
import { ICategoricalColumn } from '../model';
import CategoricalColumn from '../model/CategoricalColumn';
import Column from '../model/Column';
import OrdinalColumn from '../model/OrdinalColumn';
import { default as IRenderContext, ICellRendererFactory, ICellRenderer, IGroupCellRenderer, ISummaryRenderer } from './interfaces';
export default class CategoricalCellRenderer implements ICellRendererFactory {
    readonly title: string;
    readonly groupTitle: string;
    canRender(col: Column): boolean;
    create(col: ICategoricalColumn, context: IRenderContext): ICellRenderer;
    createGroup(col: ICategoricalColumn, _context: IRenderContext, globalHist: ICategoricalStatistics | null): IGroupCellRenderer;
    createSummary(col: ICategoricalColumn, ctx: IRenderContext, interactive: boolean): ISummaryRenderer;
}
export declare function interactiveHist(col: CategoricalColumn | OrdinalColumn, node: HTMLElement): (missing: number, actCol: CategoricalColumn | OrdinalColumn) => void;
