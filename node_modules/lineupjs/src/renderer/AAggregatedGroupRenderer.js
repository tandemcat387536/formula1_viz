import { noRenderer } from './utils';
var AAggregatedGroupRenderer = (function () {
    function AAggregatedGroupRenderer() {
    }
    AAggregatedGroupRenderer.prototype.createGroup = function (col, context, hist, imposer) {
        var _this = this;
        var single = this.create(col, context, hist, imposer);
        return {
            template: "<div>" + single.template + "</div>",
            update: function (node, group, rows) {
                var aggregate = _this.aggregatedIndex(rows, col);
                single.update(node.firstElementChild, rows[aggregate], aggregate, group);
            }
        };
    };
    AAggregatedGroupRenderer.prototype.createSummary = function () {
        return noRenderer;
    };
    return AAggregatedGroupRenderer;
}());
export { AAggregatedGroupRenderer };
export default AAggregatedGroupRenderer;
//# sourceMappingURL=AAggregatedGroupRenderer.js.map