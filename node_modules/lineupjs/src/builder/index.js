import { builder } from './DataBuilder';
export * from './DataBuilder';
export * from './column';
export * from './RankingBuilder';
export * from './adapter';
export function asTaggle(node, data) {
    var _a;
    var columns = [];
    for (var _i = 2; _i < arguments.length; _i++) {
        columns[_i - 2] = arguments[_i];
    }
    return (_a = builder(data)).deriveColumns.apply(_a, columns).deriveColors()
        .defaultRanking()
        .buildTaggle(node);
}
export function asLineUp(node, data) {
    var _a;
    var columns = [];
    for (var _i = 2; _i < arguments.length; _i++) {
        columns[_i - 2] = arguments[_i];
    }
    return (_a = builder(data)).deriveColumns.apply(_a, columns).deriveColors()
        .defaultRanking()
        .build(node);
}
//# sourceMappingURL=index.js.map