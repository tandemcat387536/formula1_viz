import * as equalImpl from 'fast-deep-equal';
export var equal = (typeof equalImpl === 'function' ? equalImpl : equalImpl.default);
export function findOption(options) {
    return function (key, defaultValue) {
        if (key in options) {
            return options[key];
        }
        if (key.indexOf('.') > 0) {
            var p = key.substring(0, key.indexOf('.'));
            key = key.substring(key.indexOf('.') + 1);
            if (p in options && key in options[p]) {
                return options[p][key];
            }
        }
        return defaultValue;
    };
}
export function equalArrays(a, b) {
    if (a.length !== b.length) {
        return false;
    }
    return a.every(function (ai, i) { return ai === b[i]; });
}
export function fixCSS(id) {
    return id.replace(/[\s!#$%&'()*+,.\/:;<=>?@\[\\\]^`{|}~]+/g, '_');
}
//# sourceMappingURL=utils.js.map