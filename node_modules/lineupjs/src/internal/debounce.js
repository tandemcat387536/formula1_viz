import { __spreadArrays } from "tslib";
export default function debounce(callback, timeToDelay, choose) {
    if (timeToDelay === void 0) { timeToDelay = 100; }
    var tm = -1;
    var ctx = null;
    return function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        if (tm >= 0) {
            clearTimeout(tm);
            tm = -1;
        }
        var next = { self: this, args: args };
        ctx = ctx && choose ? choose(ctx, next) : next;
        tm = self.setTimeout(function () {
            console.assert(ctx != null);
            callback.call.apply(callback, __spreadArrays([ctx.self], ctx.args));
            ctx = null;
        }, timeToDelay);
    };
}
//# sourceMappingURL=debounce.js.map