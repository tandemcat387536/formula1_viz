import { __decorate, __extends } from "tslib";
import { toolbar } from './annotations';
import ArrayColumn from './ArrayColumn';
import { EAlignment } from './StringColumn';
var StringsColumn = (function (_super) {
    __extends(StringsColumn, _super);
    function StringsColumn(id, desc) {
        var _this = _super.call(this, id, desc) || this;
        _this.setDefaultWidth(200);
        _this.alignment = desc.alignment || EAlignment.left;
        _this.escape = desc.escape !== false;
        return _this;
    }
    StringsColumn.prototype.on = function (type, listener) {
        return _super.prototype.on.call(this, type, listener);
    };
    StringsColumn.prototype.getValues = function (row) {
        return _super.prototype.getValues.call(this, row).map(function (v) {
            return v == null ? '' : String(v);
        });
    };
    StringsColumn = __decorate([
        toolbar('search')
    ], StringsColumn);
    return StringsColumn;
}(ArrayColumn));
export default StringsColumn;
//# sourceMappingURL=StringsColumn.js.map