import Column from './Column';
import { IColumnDesc, IDataRow } from './interfaces';
import { INumberFilter } from './INumberColumn';
export { INumberFilter as IDateFilter, restoreNumberFilter as restoreDateFilter, noNumberFilter as noDateFilter, isEqualNumberFilter as isEqualDateFilter, isDummyNumberFilter as isDummyDateFilter } from './INumberColumn';
export interface IDateColumn extends Column {
    getDate(row: IDataRow): Date | null;
}
export default IDateColumn;
export interface IDateDesc {
    dateFormat?: string;
    dateParse?: string;
}
export declare function isDateColumn(col: Column): col is IDateColumn;
export declare function isDateColumn(col: IColumnDesc): col is IDateDesc & IColumnDesc;
export declare function isDateIncluded(filter: INumberFilter | null, value: Date | null): boolean;
export declare type IDateGranularity = 'century' | 'decade' | 'year' | 'month' | 'week' | 'day_of_week' | 'day_of_month' | 'day_of_year' | 'hour' | 'minute' | 'second';
export interface IDateGrouper {
    granularity: IDateGranularity;
    circular: boolean;
}
