import { __extends } from "tslib";
import { toCategories, toCategory } from './ICategoricalColumn';
import MapColumn from './MapColumn';
var CategoricalMapColumn = (function (_super) {
    __extends(CategoricalMapColumn, _super);
    function CategoricalMapColumn(id, desc) {
        var _this = _super.call(this, id, desc) || this;
        _this.lookup = new Map();
        _this.categories = toCategories(desc);
        _this.missingCategory = desc.missingCategory ? toCategory(desc.missingCategory, NaN) : null;
        _this.categories.forEach(function (d) { return _this.lookup.set(d.name, d); });
        return _this;
    }
    CategoricalMapColumn.prototype.parseValue = function (v) {
        if (!v) {
            return this.missingCategory;
        }
        var vs = String(v);
        return this.lookup.has(vs) ? this.lookup.get(vs) : this.missingCategory;
    };
    CategoricalMapColumn.prototype.getCategories = function (row) {
        var _this = this;
        return _super.prototype.getValue.call(this, row).map(function (_a) {
            var key = _a.key, value = _a.value;
            return ({
                key: key,
                value: _this.parseValue(value)
            });
        });
    };
    CategoricalMapColumn.prototype.getValue = function (row) {
        return this.getCategories(row).map(function (_a) {
            var key = _a.key, value = _a.value;
            return ({
                key: key,
                value: value ? value.name : null
            });
        });
    };
    CategoricalMapColumn.prototype.getLabels = function (row) {
        return this.getCategories(row).map(function (_a) {
            var key = _a.key, value = _a.value;
            return ({
                key: key,
                value: value ? value.label : ''
            });
        });
    };
    return CategoricalMapColumn;
}(MapColumn));
export default CategoricalMapColumn;
//# sourceMappingURL=CategoricalMapColumn.js.map