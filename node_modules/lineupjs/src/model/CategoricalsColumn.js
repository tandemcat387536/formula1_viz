import { __extends } from "tslib";
import ArrayColumn from './ArrayColumn';
import { toCategories, toCategory } from './ICategoricalColumn';
var CategoricalsColumn = (function (_super) {
    __extends(CategoricalsColumn, _super);
    function CategoricalsColumn(id, desc) {
        var _this = _super.call(this, id, desc) || this;
        _this.lookup = new Map();
        _this.categories = toCategories(desc);
        _this.missingCategory = desc.missingCategory ? toCategory(desc.missingCategory, NaN) : null;
        _this.categories.forEach(function (d) { return _this.lookup.set(d.name, d); });
        return _this;
    }
    CategoricalsColumn.prototype.getCategories = function (row) {
        var _this = this;
        return _super.prototype.getValues.call(this, row).map(function (v) {
            if (!v) {
                return _this.missingCategory;
            }
            var vs = String(v);
            return _this.lookup.has(vs) ? _this.lookup.get(vs) : _this.missingCategory;
        });
    };
    CategoricalsColumn.prototype.getSet = function (row) {
        var r = new Set(this.getCategories(row));
        r.delete(this.missingCategory);
        return r;
    };
    CategoricalsColumn.prototype.getValues = function (row) {
        return this.getCategories(row).map(function (v) { return v ? v.name : null; });
    };
    CategoricalsColumn.prototype.getLabels = function (row) {
        return this.getCategories(row).map(function (v) { return v ? v.label : ''; });
    };
    return CategoricalsColumn;
}(ArrayColumn));
export default CategoricalsColumn;
//# sourceMappingURL=CategoricalsColumn.js.map