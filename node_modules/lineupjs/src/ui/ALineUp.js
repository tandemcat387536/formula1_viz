import { __extends } from "tslib";
import AEventDispatcher from '../internal/AEventDispatcher';
import DataProvider from '../provider/ADataProvider';
import { getUnsupportedBrowserError, SUPPORTED_FIREFOX_VERSION, SUPPORTED_CHROME_VERSION, SUPPORTED_EDGE_VERSION } from '../browser';
var ALineUp = (function (_super) {
    __extends(ALineUp, _super);
    function ALineUp(node, data, ignoreIncompatibleBrowser) {
        var _this = _super.call(this) || this;
        _this.node = node;
        _this.data = data;
        _this.highlightListeners = 0;
        var error = getUnsupportedBrowserError();
        _this.isBrowserSupported = ignoreIncompatibleBrowser || !error;
        if (!_this.isBrowserSupported) {
            _this.node.classList.add('lu-unsupported-browser');
            _this.node.innerHTML = "<span>" + error + "</span>\n      <div class=\"lu-unsupported-browser-hint\">\n        <a href=\"https://www.mozilla.org/en-US/firefox/\" rel=\"noopener\" target=\"_blank\" data-browser=\"firefox\" data-version=\"" + SUPPORTED_FIREFOX_VERSION + "\"></a>\n        <a href=\"https://www.google.com/chrome/index.html\" rel=\"noopener\" target=\"_blank\" data-browser=\"chrome\" data-version=\"" + SUPPORTED_CHROME_VERSION + "\" title=\"best support\"></a>\n        <a href=\"https://www.microsoft.com/en-us/windows/microsoft-edge\" rel=\"noopener\" target=\"_blank\" data-browser=\"edge\" data-version=\"" + SUPPORTED_EDGE_VERSION + "\"></a>\n      </div><span>use the <code>ignoreUnsupportedBrowser=true</code> option to ignore this error at your own risk</span>";
        }
        _this.forward(_this.data, DataProvider.EVENT_SELECTION_CHANGED + ".main");
        return _this;
    }
    ALineUp.prototype.createEventList = function () {
        return _super.prototype.createEventList.call(this).concat([ALineUp.EVENT_HIGHLIGHT_CHANGED, ALineUp.EVENT_SELECTION_CHANGED]);
    };
    ALineUp.prototype.on = function (type, listener) {
        return _super.prototype.on.call(this, type, listener);
    };
    ALineUp.prototype.destroy = function () {
        this.node.innerHTML = '';
    };
    ALineUp.prototype.dump = function () {
        return this.data.dump();
    };
    ALineUp.prototype.setDataProvider = function (data, dump) {
        if (this.data) {
            this.unforward(this.data, DataProvider.EVENT_SELECTION_CHANGED + ".taggle");
        }
        this.data = data;
        if (dump) {
            this.data.restore(dump);
        }
        this.forward(this.data, DataProvider.EVENT_SELECTION_CHANGED + ".taggle");
    };
    ALineUp.prototype.getSelection = function () {
        return this.data.getSelection();
    };
    ALineUp.prototype.setSelection = function (dataIndices) {
        this.data.setSelection(dataIndices);
    };
    ALineUp.prototype.sortBy = function (column, ascending) {
        if (ascending === void 0) { ascending = false; }
        var col = this.data.find(column);
        if (col) {
            col.sortByMe(ascending);
        }
        return col != null;
    };
    ALineUp.prototype.listenersChanged = function (type, enabled) {
        _super.prototype.listenersChanged.call(this, type, enabled);
        if (!type.startsWith(ALineUp.EVENT_HIGHLIGHT_CHANGED)) {
            return;
        }
        if (enabled) {
            this.highlightListeners += 1;
            if (this.highlightListeners === 1) {
                this.enableHighlightListening(true);
            }
        }
        else {
            this.highlightListeners -= 1;
            if (this.highlightListeners === 0) {
                this.enableHighlightListening(false);
            }
        }
    };
    ALineUp.prototype.enableHighlightListening = function (_enable) {
    };
    ALineUp.EVENT_SELECTION_CHANGED = DataProvider.EVENT_SELECTION_CHANGED;
    ALineUp.EVENT_HIGHLIGHT_CHANGED = 'highlightChanged';
    return ALineUp;
}(AEventDispatcher));
export { ALineUp };
export default ALineUp;
//# sourceMappingURL=ALineUp.js.map