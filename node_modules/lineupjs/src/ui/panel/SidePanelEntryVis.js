import Column from '../../model/Column';
import { dragAbleColumn, updateHeader, createShortcutMenuItems } from '../header';
import { NumberColumn } from '../../model';
var SidePanelEntryVis = (function () {
    function SidePanelEntryVis(column, ctx, document) {
        var _this = this;
        this.column = column;
        this.ctx = ctx;
        this.node = document.createElement('article');
        this.node.classList.add('lu-side-panel-entry');
        this.node.dataset.colId = column.id;
        this.node.dataset.type = column.desc.type;
        this.summary = ctx.summaryRenderer(column, true);
        this.column.on([NumberColumn.EVENT_FILTER_CHANGED + ".panel", Column.EVENT_DIRTY_HEADER + ".panel"], function () {
            _this.update();
        });
        this.init();
        this.update();
    }
    SidePanelEntryVis.prototype.init = function () {
        this.node.innerHTML = "\n      <header><div class=\"lu-label\"></div><div class=\"lu-toolbar\"></div></header>" + this.summary.template;
        createShortcutMenuItems(this.node.querySelector('.lu-toolbar'), 0, this.column, this.ctx, false);
        dragAbleColumn(this.node.querySelector('header'), this.column, this.ctx);
        var summary = this.node.lastElementChild;
        summary.classList.add('lu-summary');
        summary.dataset.renderer = this.column.getSummaryRenderer();
        summary.dataset.interactive = '';
    };
    SidePanelEntryVis.prototype.update = function (ctx) {
        if (ctx === void 0) { ctx = this.ctx; }
        this.ctx = ctx;
        updateHeader(this.node, this.column);
        this.summary.update(this.node.querySelector('.lu-summary'), ctx.statsOf(this.column));
    };
    SidePanelEntryVis.prototype.destroy = function () {
        this.column.on([NumberColumn.EVENT_FILTER_CHANGED + ".panel", Column.EVENT_DIRTY_HEADER + ".panel"], null);
        this.node.remove();
    };
    return SidePanelEntryVis;
}());
export default SidePanelEntryVis;
//# sourceMappingURL=SidePanelEntryVis.js.map