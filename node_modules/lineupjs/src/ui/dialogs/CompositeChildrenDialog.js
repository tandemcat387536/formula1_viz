import { __extends } from "tslib";
import { suffix } from '../../internal/AEventDispatcher';
import debounce from '../../internal/debounce';
import CompositeColumn from '../../model/CompositeColumn';
import { createHeader, updateHeader } from '../header';
import ADialog from './ADialog';
var CompositeChildrenDialog = (function (_super) {
    __extends(CompositeChildrenDialog, _super);
    function CompositeChildrenDialog(column, dialog, ctx) {
        var _this = _super.call(this, dialog) || this;
        _this.column = column;
        _this.ctx = ctx;
        _this.id = ".dialog" + Math.random().toString(36).slice(-8).substr(0, 3);
        return _this;
    }
    CompositeChildrenDialog.prototype.destroy = function () {
        this.column.on(suffix(this.id, CompositeColumn.EVENT_ADD_COLUMN, CompositeColumn.EVENT_REMOVE_COLUMN), null);
        _super.prototype.destroy.call(this);
    };
    CompositeChildrenDialog.prototype.build = function (node) {
        var _this = this;
        node.classList.add('lu-sub-nested');
        var createChildren = function () {
            _this.column.children.forEach(function (c) {
                var n = createHeader(c, _this.ctx, {
                    mergeDropAble: false,
                    resizeable: false,
                    level: _this.dialog.level + 1
                });
                n.className = "lu-header";
                updateHeader(n, c);
                var summary = _this.ctx.summaryRenderer(c, false);
                n.insertAdjacentHTML('beforeend', summary.template);
                var summaryNode = n.lastElementChild;
                summaryNode.dataset.renderer = c.getSummaryRenderer();
                summaryNode.classList.add('lu-summary');
                summary.update(summaryNode, _this.ctx.statsOf(c));
                node.appendChild(n);
            });
        };
        createChildren();
        this.column.on(suffix(this.id, CompositeColumn.EVENT_ADD_COLUMN, CompositeColumn.EVENT_REMOVE_COLUMN), debounce(function () {
            if (!node.parentElement) {
                _this.destroy();
                return;
            }
            node.innerHTML = '';
            createChildren();
        }));
    };
    return CompositeChildrenDialog;
}(ADialog));
export default CompositeChildrenDialog;
//# sourceMappingURL=CompositeChildrenDialog.js.map