import { __extends } from "tslib";
import ADialog from './ADialog';
import { uniqueId } from './utils';
var ChangeRendererDialog = (function (_super) {
    __extends(ChangeRendererDialog, _super);
    function ChangeRendererDialog(column, dialog, ctx) {
        var _this = _super.call(this, dialog) || this;
        _this.column = column;
        _this.ctx = ctx;
        return _this;
    }
    ChangeRendererDialog.prototype.build = function (node) {
        var _this = this;
        var current = this.column.getRenderer();
        var currentGroup = this.column.getGroupRenderer();
        var currentSummary = this.column.getSummaryRenderer();
        var _a = this.ctx.getPossibleRenderer(this.column), item = _a.item, group = _a.group, summary = _a.summary;
        console.assert(item.length > 1 || group.length > 1 || summary.length > 1);
        var id = uniqueId(this.dialog.idPrefix);
        node.insertAdjacentHTML('beforeend', "\n      <strong>Item Visualization</strong>\n      " + item.sort(function (a, b) { return a.label.localeCompare(b.label); }).map(function (d) { return " <div class=\"lu-checkbox\"><input id=\"" + id + "0" + d.type + "\" type=\"radio\" name=\"renderer\" value=\"" + d.type + "\" " + ((current === d.type) ? 'checked' : '') + "><label for=\"" + id + "0" + d.type + "\">" + d.label + "</label></div>"; }).join('') + "\n      <strong>Group Visualization</strong>\n      " + group.sort(function (a, b) { return a.label.localeCompare(b.label); }).map(function (d) { return " <div class=\"lu-checkbox\"><input id=\"" + id + "1" + d.type + "\" type=\"radio\" name=\"group\" value=\"" + d.type + "\" " + ((currentGroup === d.type) ? 'checked' : '') + "><label for=\"" + id + "1" + d.type + "\">" + d.label + "</label></div>"; }).join('') + "\n      <strong>Summary Visualization</strong>\n      " + summary.sort(function (a, b) { return a.label.localeCompare(b.label); }).map(function (d) { return " <div class=\"lu-checkbox\"><input id=\"" + id + "2" + d.type + "\" type=\"radio\" name=\"summary\" value=\"" + d.type + "\" " + ((currentSummary === d.type) ? 'checked' : '') + "><label for=\"" + id + "2" + d.type + "\">" + d.label + "</label></div>"; }).join('') + "\n    ");
        this.forEach('input[name="renderer"]', function (n) {
            n.addEventListener('change', function () { return _this.column.setRenderer(n.value); }, { passive: true });
        });
        this.forEach('input[name="group"]', function (n) {
            n.addEventListener('change', function () { return _this.column.setGroupRenderer(n.value); }, { passive: true });
        });
        this.forEach('input[name="summary"]', function (n) {
            n.addEventListener('change', function () { return _this.column.setSummaryRenderer(n.value); }, { passive: true });
        });
    };
    return ChangeRendererDialog;
}(ADialog));
export default ChangeRendererDialog;
//# sourceMappingURL=ChangeRendererDialog.js.map