import { __extends } from "tslib";
import { round } from '../../internal';
import ADialog from './ADialog';
import { forEach, colorOf } from './utils';
var WeightsEditDialog = (function (_super) {
    __extends(WeightsEditDialog, _super);
    function WeightsEditDialog(column, dialog) {
        var _this = _super.call(this, dialog, {
            fullDialog: true
        }) || this;
        _this.column = column;
        _this.weights = _this.column.getWeights();
        return _this;
    }
    WeightsEditDialog.prototype.reset = function () {
        var _this = this;
        forEach(this.node, 'input[type=number]', function (n) {
            var v = round(100 / _this.weights.length, 2);
            n.value = String(v);
            n.nextElementSibling.firstElementChild.style.width = v + "%";
        });
        this.column.setWeights(this.weights.slice().fill(100 / this.weights.length));
    };
    WeightsEditDialog.prototype.build = function (node) {
        node.classList.add('lu-filter-table', 'lu-weights-table');
        var children = this.column.children;
        node.insertAdjacentHTML('beforeend', "<div>\n        " + this.weights.map(function (weight, i) { return "<div><input type=\"number\" value=\"" + round(weight * 100, 2) + "\" min=\"0\" max=\"100\" step=\"any\"><span><span style=\"background-color: " + colorOf(children[i]) + "; width: " + round(weight * 100, 2) + "%\"></span></span>" + children[i].label + "</div>"; }).join('') + "\n    </div>");
        this.forEach('input[type=number]', function (d) {
            d.oninput = function () {
                d.nextElementSibling.firstElementChild.style.width = d.value + "%";
            };
        });
    };
    WeightsEditDialog.prototype.submit = function () {
        var items = this.forEach('input[type=number]', function (n) { return parseFloat(n.value) / 100; });
        this.column.setWeights(items);
        return true;
    };
    return WeightsEditDialog;
}(ADialog));
export default WeightsEditDialog;
//# sourceMappingURL=WeightsEditDialog.js.map