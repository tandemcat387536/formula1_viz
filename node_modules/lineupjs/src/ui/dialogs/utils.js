import Column from '../../model';
import { forEach, uniqueId } from '../../renderer/utils';
import { isMapAbleColumn } from '../../model/MappingFunction';
export function updateFilterState(attachment, column, filtered) {
    var toggle = function (e) {
        var n = e;
        if (filtered) {
            n.dataset.active = '';
        }
        else {
            delete n.dataset.active;
        }
    };
    toggle(attachment);
    var root = attachment.closest('.lu');
    if (!root) {
        return;
    }
    Array.from(root.querySelectorAll("[data-col-id=\"" + column.id + "\"] i[title^=Filter]")).forEach(toggle);
}
export function sortMethods(node, column, methods, idPrefix) {
    var id = uniqueId(idPrefix);
    var bak = column.getSortMethod();
    methods.forEach(function (d) { return node.insertAdjacentHTML('beforeend', "<div class=\"checkbox\"><input id=\"" + id + d + "\" type=\"radio\" name=\"multivaluesort\" value=\"" + d + "\"  " + ((bak === d) ? 'checked' : '') + " ><label for=\"" + id + d + "\">" + (d.slice(0, 1).toUpperCase() + d.slice(1)) + "</label></div>"); });
    forEach(node, 'input[name=multivaluesort]', function (n) {
        n.addEventListener('change', function () { return column.setSortMethod(n.value); }, {
            passive: true
        });
    });
}
export function colorOf(col) {
    if (isMapAbleColumn(col)) {
        return col.getColorMapping().apply(0);
    }
    return Column.DEFAULT_COLOR;
}
export { uniqueId, forEach, forEachChild } from '../../renderer/utils';
//# sourceMappingURL=utils.js.map